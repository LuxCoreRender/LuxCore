#include <string>
namespace slg { namespace ocl {
std::string KernelSource_film_types = 
"#line 2 \"film_types.cl\"\n"
"\n"
"/***************************************************************************\n"
" * Copyright 1998-2015 by authors (see AUTHORS.txt)                        *\n"
" *                                                                         *\n"
" *   This file is part of LuxRender.                                       *\n"
" *                                                                         *\n"
" * Licensed under the Apache License, Version 2.0 (the \"License\");         *\n"
" * you may not use this file except in compliance with the License.        *\n"
" * You may obtain a copy of the License at                                 *\n"
" *                                                                         *\n"
" *     http://www.apache.org/licenses/LICENSE-2.0                          *\n"
" *                                                                         *\n"
" * Unless required by applicable law or agreed to in writing, software     *\n"
" * distributed under the License is distributed on an \"AS IS\" BASIS,       *\n"
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.*\n"
" * See the License for the specific language governing permissions and     *\n"
" * limitations under the License.                                          *\n"
" ***************************************************************************/\n"
"\n"
"//------------------------------------------------------------------------------\n"
"// SampleResult\n"
"//------------------------------------------------------------------------------\n"
"\n"
"#if defined(SLG_OPENCL_KERNEL)\n"
"\n"
"typedef struct {\n"
"	// Used only by PATHOCL\n"
"#if defined(PARAM_USE_FAST_PIXEL_FILTER)\n"
"	uint pixelX, pixelY;\n"
"#endif\n"
"	float filmX, filmY;\n"
"	Spectrum radiancePerPixelNormalized[PARAM_FILM_RADIANCE_GROUP_COUNT];\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_ALPHA)\n"
"	float alpha;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_DEPTH)\n"
"	float depth;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_POSITION)\n"
"	Point position;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_GEOMETRY_NORMAL)\n"
"	Normal geometryNormal;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_SHADING_NORMAL)\n"
"	Normal shadingNormal;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_MATERIAL_ID)\n"
"	// Note: MATERIAL_ID_MASK and BY_MATERIAL_ID are calculated starting from materialID field\n"
"	uint materialID;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_OBJECT_ID)\n"
"	// Note: OBJECT_ID_MASK and BY_OBJECT_ID are calculated starting from objectID field\n"
"	uint objectID;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_DIRECT_DIFFUSE)\n"
"	Spectrum directDiffuse;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_DIRECT_GLOSSY)\n"
"	Spectrum directGlossy;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_EMISSION)\n"
"	Spectrum emission;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_INDIRECT_DIFFUSE)\n"
"	Spectrum indirectDiffuse;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_INDIRECT_GLOSSY)\n"
"	Spectrum indirectGlossy;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_INDIRECT_SPECULAR)\n"
"	Spectrum indirectSpecular;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_DIRECT_SHADOW_MASK)\n"
"	float directShadowMask;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_INDIRECT_SHADOW_MASK)\n"
"	float indirectShadowMask;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_UV)\n"
"	UV uv;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_RAYCOUNT)\n"
"	float rayCount;\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_IRRADIANCE)\n"
"	Spectrum irradiance, irradiancePathThroughput;\n"
"#endif\n"
"\n"
"	BSDFEvent firstPathVertexEvent;\n"
"	int firstPathVertex, lastPathVertex;\n"
"} SampleResult;\n"
"\n"
"#endif\n"
"\n"
"//------------------------------------------------------------------------------\n"
"// Some macro trick in order to have more readable code\n"
"//------------------------------------------------------------------------------\n"
"\n"
"#if defined(SLG_OPENCL_KERNEL)\n"
"\n"
"#define FILM_RADIANCE_GROUP_PARAM_DECL , __global float **filmRadianceGroup\n"
"#define FILM_RADIANCE_GROUP_PARAM , filmRadianceGroup\n"
"\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_ALPHA)\n"
"#define FILM_ALPHA_PARAM_DECL , __global float *filmAlpha\n"
"#define FILM_ALPHA_PARAM , filmAlpha\n"
"#else\n"
"#define FILM_ALPHA_PARAM_DECL\n"
"#define FILM_ALPHA_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_DEPTH)\n"
"#define FILM_DEPTH_PARAM_DECL , __global float *filmDepth\n"
"#define FILM_DEPTH_PARAM , filmDepth\n"
"#else\n"
"#define FILM_DEPTH_PARAM_DECL\n"
"#define FILM_DEPTH_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_POSITION)\n"
"#define FILM_POSITION_PARAM_DECL , __global float *filmPosition\n"
"#define FILM_POSITION_PARAM , filmPosition\n"
"#else\n"
"#define FILM_POSITION_PARAM_DECL\n"
"#define FILM_POSITION_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_GEOMETRY_NORMAL)\n"
"#define FILM_GEOMETRY_NORMAL_PARAM_DECL , __global float *filmGeometryNormal\n"
"#define FILM_GEOMETRY_NORMAL_PARAM , filmGeometryNormal\n"
"#else\n"
"#define FILM_GEOMETRY_NORMAL_PARAM_DECL\n"
"#define FILM_GEOMETRY_NORMAL_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_SHADING_NORMAL)\n"
"#define FILM_SHADING_NORMAL_PARAM_DECL , __global float *filmShadingNormal\n"
"#define FILM_SHADING_NORMAL_PARAM , filmShadingNormal\n"
"#else\n"
"#define FILM_SHADING_NORMAL_PARAM_DECL\n"
"#define FILM_SHADING_NORMAL_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_MATERIAL_ID)\n"
"#define FILM_MATERIAL_ID_PARAM_DECL , __global uint *filmMaterialID\n"
"#define FILM_MATERIAL_ID_PARAM , filmMaterialID\n"
"#else\n"
"#define FILM_MATERIAL_ID_PARAM_DECL\n"
"#define FILM_MATERIAL_ID_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_DIRECT_DIFFUSE)\n"
"#define FILM_DIRECT_DIFFUSE_PARAM_DECL , __global float *filmDirectDiffuse\n"
"#define FILM_DIRECT_DIFFUSE_PARAM , filmDirectDiffuse\n"
"#else\n"
"#define FILM_DIRECT_DIFFUSE_PARAM_DECL\n"
"#define FILM_DIRECT_DIFFUSE_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_DIRECT_GLOSSY)\n"
"#define FILM_DIRECT_GLOSSY_PARAM_DECL , __global float *filmDirectGlossy\n"
"#define FILM_DIRECT_GLOSSY_PARAM , filmDirectGlossy\n"
"#else\n"
"#define FILM_DIRECT_GLOSSY_PARAM_DECL\n"
"#define FILM_DIRECT_GLOSSY_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_EMISSION)\n"
"#define FILM_EMISSION_PARAM_DECL , __global float *filmEmission\n"
"#define FILM_EMISSION_PARAM , filmEmission\n"
"#else\n"
"#define FILM_EMISSION_PARAM_DECL\n"
"#define FILM_EMISSION_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_INDIRECT_DIFFUSE)\n"
"#define FILM_INDIRECT_DIFFUSE_PARAM_DECL , __global float *filmIndirectDiffuse\n"
"#define FILM_INDIRECT_DIFFUSE_PARAM , filmIndirectDiffuse\n"
"#else\n"
"#define FILM_INDIRECT_DIFFUSE_PARAM_DECL\n"
"#define FILM_INDIRECT_DIFFUSE_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_INDIRECT_GLOSSY)\n"
"#define FILM_INDIRECT_GLOSSY_PARAM_DECL , __global float *filmIndirectGlossy\n"
"#define FILM_INDIRECT_GLOSSY_PARAM , filmIndirectGlossy\n"
"#else\n"
"#define FILM_INDIRECT_GLOSSY_PARAM_DECL\n"
"#define FILM_INDIRECT_GLOSSY_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_INDIRECT_SPECULAR)\n"
"#define FILM_INDIRECT_SPECULAR_PARAM_DECL , __global float *filmIndirectSpecular\n"
"#define FILM_INDIRECT_SPECULAR_PARAM , filmIndirectSpecular\n"
"#else\n"
"#define FILM_INDIRECT_SPECULAR_PARAM_DECL\n"
"#define FILM_INDIRECT_SPECULAR_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_MATERIAL_ID_MASK)\n"
"#define FILM_MATERIAL_ID_MASK_PARAM_DECL , __global float *filmMaterialIDMask\n"
"#define FILM_MATERIAL_ID_MASK_PARAM , filmMaterialIDMask\n"
"#else\n"
"#define FILM_MATERIAL_ID_MASK_PARAM_DECL\n"
"#define FILM_MATERIAL_ID_MASK_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_DIRECT_SHADOW_MASK)\n"
"#define FILM_DIRECT_SHADOW_MASK_PARAM_DECL , __global float *filmDirectShadowMask\n"
"#define FILM_DIRECT_SHADOW_MASK_PARAM , filmDirectShadowMask\n"
"#else\n"
"#define FILM_DIRECT_SHADOW_MASK_PARAM_DECL\n"
"#define FILM_DIRECT_SHADOW_MASK_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_INDIRECT_SHADOW_MASK)\n"
"#define FILM_INDIRECT_SHADOW_MASK_PARAM_DECL , __global float *filmIndirectShadowMask\n"
"#define FILM_INDIRECT_SHADOW_MASK_PARAM , filmIndirectShadowMask\n"
"#else\n"
"#define FILM_INDIRECT_SHADOW_MASK_PARAM_DECL\n"
"#define FILM_INDIRECT_SHADOW_MASK_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_UV)\n"
"#define FILM_UV_PARAM_DECL , __global float *filmUV\n"
"#define FILM_UV_PARAM , filmUV\n"
"#else\n"
"#define FILM_UV_PARAM_DECL\n"
"#define FILM_UV_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_RAYCOUNT)\n"
"#define FILM_RAYCOUNT_PARAM_DECL , __global float *filmRayCount\n"
"#define FILM_RAYCOUNT_PARAM , filmRayCount\n"
"#else\n"
"#define FILM_RAYCOUNT_PARAM_DECL\n"
"#define FILM_RAYCOUNT_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_BY_MATERIAL_ID)\n"
"#define FILM_BY_MATERIAL_ID_PARAM_DECL , __global float *filmByMaterialID\n"
"#define FILM_BY_MATERIAL_ID_PARAM , filmByMaterialID\n"
"#else\n"
"#define FILM_BY_MATERIAL_ID_PARAM_DECL\n"
"#define FILM_BY_MATERIAL_ID_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_IRRADIANCE)\n"
"#define FILM_IRRADIANCE_PARAM_DECL , __global float *filmIrradiance\n"
"#define FILM_IRRADIANCE_PARAM , filmIrradiance\n"
"#else\n"
"#define FILM_IRRADIANCE_PARAM_DECL\n"
"#define FILM_IRRADIANCE_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_OBJECT_ID)\n"
"#define FILM_OBJECT_ID_PARAM_DECL , __global uint *filmObjectID\n"
"#define FILM_OBJECT_ID_PARAM , filmObjectID\n"
"#else\n"
"#define FILM_OBJECT_ID_PARAM_DECL\n"
"#define FILM_OBJECT_ID_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_OBJECT_ID_MASK)\n"
"#define FILM_OBJECT_ID_MASK_PARAM_DECL , __global float *filmObjectIDMask\n"
"#define FILM_OBJECT_ID_MASK_PARAM , filmObjectIDMask\n"
"#else\n"
"#define FILM_OBJECT_ID_MASK_PARAM_DECL\n"
"#define FILM_OBJECT_ID_MASK_PARAM\n"
"#endif\n"
"#if defined(PARAM_FILM_CHANNELS_HAS_BY_OBJECT_ID)\n"
"#define FILM_BY_OBJECT_ID_PARAM_DECL , __global float *filmByObjectID\n"
"#define FILM_BY_OBJECT_ID_PARAM , filmByObjectID\n"
"#else\n"
"#define FILM_BY_OBJECT_ID_PARAM_DECL\n"
"#define FILM_BY_OBJECT_ID_PARAM\n"
"#endif\n"
"\n"
"#define FILM_PARAM_DECL , const uint filmWidth, const uint filmHeight FILM_RADIANCE_GROUP_PARAM_DECL FILM_ALPHA_PARAM_DECL FILM_DEPTH_PARAM_DECL FILM_POSITION_PARAM_DECL FILM_GEOMETRY_NORMAL_PARAM_DECL FILM_SHADING_NORMAL_PARAM_DECL FILM_MATERIAL_ID_PARAM_DECL FILM_DIRECT_DIFFUSE_PARAM_DECL FILM_DIRECT_GLOSSY_PARAM_DECL FILM_EMISSION_PARAM_DECL FILM_INDIRECT_DIFFUSE_PARAM_DECL FILM_INDIRECT_GLOSSY_PARAM_DECL FILM_INDIRECT_SPECULAR_PARAM_DECL FILM_MATERIAL_ID_MASK_PARAM_DECL FILM_DIRECT_SHADOW_MASK_PARAM_DECL FILM_INDIRECT_SHADOW_MASK_PARAM_DECL FILM_UV_PARAM_DECL FILM_RAYCOUNT_PARAM_DECL FILM_BY_MATERIAL_ID_PARAM_DECL FILM_IRRADIANCE_PARAM_DECL FILM_OBJECT_ID_PARAM_DECL FILM_OBJECT_ID_MASK_PARAM_DECL FILM_BY_OBJECT_ID_PARAM_DECL\n"
"#define FILM_PARAM , filmWidth, filmHeight FILM_RADIANCE_GROUP_PARAM FILM_ALPHA_PARAM FILM_DEPTH_PARAM FILM_POSITION_PARAM FILM_GEOMETRY_NORMAL_PARAM FILM_SHADING_NORMAL_PARAM FILM_MATERIAL_ID_PARAM FILM_DIRECT_DIFFUSE_PARAM FILM_DIRECT_GLOSSY_PARAM FILM_EMISSION_PARAM FILM_INDIRECT_DIFFUSE_PARAM FILM_INDIRECT_GLOSSY_PARAM FILM_INDIRECT_SPECULAR_PARAM FILM_MATERIAL_ID_MASK_PARAM FILM_DIRECT_SHADOW_MASK_PARAM FILM_INDIRECT_SHADOW_MASK_PARAM FILM_UV_PARAM FILM_RAYCOUNT_PARAM FILM_BY_MATERIAL_ID_PARAM FILM_IRRADIANCE_PARAM FILM_OBJECT_ID_PARAM FILM_OBJECT_ID_MASK_PARAM FILM_BY_OBJECT_ID_PARAM\n"
"\n"
"#endif\n"
; } }
