#include <string>
namespace slg { namespace ocl {
std::string KernelSource_filter_types = 
"#line 2 \"filter_types.cl\"\n"
"\n"
"/***************************************************************************\n"
" * Copyright 1998-2017 by authors (see AUTHORS.txt)                        *\n"
" *                                                                         *\n"
" *   This file is part of LuxRender.                                       *\n"
" *                                                                         *\n"
" * Licensed under the Apache License, Version 2.0 (the \"License\");         *\n"
" * you may not use this file except in compliance with the License.        *\n"
" * You may obtain a copy of the License at                                 *\n"
" *                                                                         *\n"
" *     http://www.apache.org/licenses/LICENSE-2.0                          *\n"
" *                                                                         *\n"
" * Unless required by applicable law or agreed to in writing, software     *\n"
" * distributed under the License is distributed on an \"AS IS\" BASIS,       *\n"
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.*\n"
" * See the License for the specific language governing permissions and     *\n"
" * limitations under the License.                                          *\n"
" ***************************************************************************/\n"
"\n"
"//------------------------------------------------------------------------------\n"
"// Frame buffer data types\n"
"//------------------------------------------------------------------------------\n"
"\n"
"typedef struct {\n"
"	Spectrum c;\n"
"	float count;\n"
"} Pixel;\n"
"\n"
"typedef struct {\n"
"	float alpha;\n"
"} AlphaPixel;\n"
"\n"
"//------------------------------------------------------------------------------\n"
"// Filter data types\n"
"//------------------------------------------------------------------------------\n"
"\n"
"typedef enum {\n"
"	FILTER_NONE, FILTER_BOX, FILTER_GAUSSIAN, FILTER_MITCHELL,\n"
"	FILTER_MITCHELL_SS, FILTER_BLACKMANHARRIS\n"
"} FilterType;\n"
"\n"
"typedef struct {\n"
"	FilterType type;\n"
"\n"
"	union {\n"
"		// Nothing to store for NONE filter\n"
"		struct {\n"
"			float widthX, widthY;\n"
"		} box;\n"
"		struct {\n"
"			float widthX, widthY;\n"
"			float alpha;\n"
"		} gaussian;\n"
"		struct {\n"
"			float widthX, widthY;\n"
"			float B, C;\n"
"		} mitchell;\n"
"		struct {\n"
"			float widthX, widthY;\n"
"			float B, C, a0, a1;\n"
"		} mitchellss;\n"
"		struct {\n"
"			float widthX, widthY;\n"
"		} blackmanharris;\n"
"	};\n"
"} Filter;\n"
; } }
